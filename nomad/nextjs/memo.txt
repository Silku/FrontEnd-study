# [1] install
npx create-next-app@latest

(+typescript)
npx create-next-app@latest --typescript


# [2] next.js 특징 
Framework, 파일 이름이나 구조 등을 정해진 규칙에 따라 만들고 따름

SSR을 통해 react의 CSR 개선
-> seo최적화, 서버에서 로딩함으로써 페이지 렌더되는데 걸리는 시간 단축
codeSplitting
파일기반 라우팅
경로기반 pre-fetching등

 =>

 1) 파일명에 따른 자동 라우팅
pages 폴더에 about.js라는 파일을 만들고 export default  ~~~ return 하면
 component명을 뭐라고 짓든 관계없이
/about 과 같이 url 주소창에 입력하면 자동으로 라우팅이 된다.
예외로 , index.js 의 경우 root


2) 리액트 컴포넌트를 만들기위한 import react from "react" 구문을 생략해도 문제 없다.


3) next Link
react-router-dom의 router과 같은 역할

13버전에 따른 변경점이 있는데 , 기존에는 아래와 같이 a태그를 삽입했지만 13버전에서는 a태그를 삽입하면 오류가 생기며, Link태그에 속성값을 넣을 수 있다.

nextjs v13이전 : 
<Link ><a className="hello"></a></Link>

nextjs v13이후 : 
<Link className="hello"></Link>


4) useRouter
nextjs에서 제공하는 hooks 현재 페이지의 url 정보를 가져오는데 사용.
URL과 쿼리 매개변수, 라우트 매개변수 등의 정보를 쉽게 가져올 수 있음

import { useRouter } from "next/router";
const router = useRouter();
<Link  style={{color:router.pathname==="/about" ? "red" : "blue"}}href="/about">
    About
</Link>



# error : 

[#error 1]: can't find module next/babel

root 폴더에 .babelrc 생성 후..
{
    "presets": ["next/babel"],
    "plugins": []
}

.eslintrc.json에는 다음과 같이 설정
{
  "extends": ["next/babel","next/core-web-vitals"]
}



[#error 2]: Invalid with child. Please remove or use 
next13버전 이후, Link 태그안에 a 태그를 쓸수 없다.
https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor